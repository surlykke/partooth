/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a org.bluez.Device1 -c OrgBluezDevice1 -N xml/org.bluez.Device1.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_BLUEZ_DEVICE1_H
#define ORG_BLUEZ_DEVICE1_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.bluez.Device1
 */
class OrgBluezDevice1: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.bluez.Device1")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.bluez.Device1\">\n"
"    <method name=\"Disconnect\"/>\n"
"    <method name=\"Connect\"/>\n"
"    <method name=\"ConnectProfile\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"UUID\"/>\n"
"    </method>\n"
"    <method name=\"DisconnectProfile\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"UUID\"/>\n"
"    </method>\n"
"    <method name=\"Pair\"/>\n"
"    <method name=\"CancelPairing\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Address\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Name\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"Alias\"/>\n"
"    <property access=\"read\" type=\"u\" name=\"Class\"/>\n"
"    <property access=\"read\" type=\"q\" name=\"Appearance\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Icon\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Paired\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"Trusted\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"Blocked\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"LegacyPairing\"/>\n"
"    <property access=\"read\" type=\"n\" name=\"RSSI\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Connected\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"UUIDs\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Modalias\"/>\n"
"    <property access=\"read\" type=\"o\" name=\"Adapter\"/>\n"
"  </interface>\n"
        "")
public:
    OrgBluezDevice1(QObject *parent);
    virtual ~OrgBluezDevice1();

public: // PROPERTIES
    Q_PROPERTY(QDBusObjectPath Adapter READ adapter)
    QDBusObjectPath adapter() const;

    Q_PROPERTY(QString Address READ address)
    QString address() const;

    Q_PROPERTY(QString Alias READ alias WRITE setAlias)
    QString alias() const;
    void setAlias(const QString &value);

    Q_PROPERTY(ushort Appearance READ appearance)
    ushort appearance() const;

    Q_PROPERTY(bool Blocked READ blocked WRITE setBlocked)
    bool blocked() const;
    void setBlocked(bool value);

    Q_PROPERTY(uint Class READ clazz)
    uint clazz() const;

    Q_PROPERTY(bool Connected READ connected)
    bool connected() const;

    Q_PROPERTY(QString Icon READ icon)
    QString icon() const;

    Q_PROPERTY(bool LegacyPairing READ legacyPairing)
    bool legacyPairing() const;

    Q_PROPERTY(QString Modalias READ modalias)
    QString modalias() const;

    Q_PROPERTY(QString Name READ name)
    QString name() const;

    Q_PROPERTY(bool Paired READ paired)
    bool paired() const;

    Q_PROPERTY(short RSSI READ rSSI)
    short rSSI() const;

    Q_PROPERTY(bool Trusted READ trusted WRITE setTrusted)
    bool trusted() const;
    void setTrusted(bool value);

    Q_PROPERTY(QStringList UUIDs READ uUIDs)
    QStringList uUIDs() const;

public Q_SLOTS: // METHODS
    void CancelPairing();
    void Connect();
    void ConnectProfile(const QString &UUID);
    void Disconnect();
    void DisconnectProfile(const QString &UUID);
    void Pair();
Q_SIGNALS: // SIGNALS
};

#endif
