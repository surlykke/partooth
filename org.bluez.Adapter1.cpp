/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a org.bluez.Adapter1 -c OrgBluezAdapter1 -N xml/org.bluez.Adapter1.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "org.bluez.Adapter1.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class OrgBluezAdapter1
 */

OrgBluezAdapter1::OrgBluezAdapter1(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

OrgBluezAdapter1::~OrgBluezAdapter1()
{
    // destructor
}

QString OrgBluezAdapter1::address() const
{
    // get the value of property Address
    return qvariant_cast< QString >(parent()->property("Address"));
}

QString OrgBluezAdapter1::alias() const
{
    // get the value of property Alias
    return qvariant_cast< QString >(parent()->property("Alias"));
}

void OrgBluezAdapter1::setAlias(const QString &value)
{
    // set the value of property Alias
    parent()->setProperty("Alias", QVariant::fromValue(value));
}

uint OrgBluezAdapter1::clazz() const
{
    // get the value of property Class
    return qvariant_cast< uint >(parent()->property("Class"));
}

bool OrgBluezAdapter1::discoverable() const
{
    // get the value of property Discoverable
    return qvariant_cast< bool >(parent()->property("Discoverable"));
}

void OrgBluezAdapter1::setDiscoverable(bool value)
{
    // set the value of property Discoverable
    parent()->setProperty("Discoverable", QVariant::fromValue(value));
}

uint OrgBluezAdapter1::discoverableTimeout() const
{
    // get the value of property DiscoverableTimeout
    return qvariant_cast< uint >(parent()->property("DiscoverableTimeout"));
}

void OrgBluezAdapter1::setDiscoverableTimeout(uint value)
{
    // set the value of property DiscoverableTimeout
    parent()->setProperty("DiscoverableTimeout", QVariant::fromValue(value));
}

bool OrgBluezAdapter1::discovering() const
{
    // get the value of property Discovering
    return qvariant_cast< bool >(parent()->property("Discovering"));
}

QString OrgBluezAdapter1::modalias() const
{
    // get the value of property Modalias
    return qvariant_cast< QString >(parent()->property("Modalias"));
}

QString OrgBluezAdapter1::name() const
{
    // get the value of property Name
    return qvariant_cast< QString >(parent()->property("Name"));
}

bool OrgBluezAdapter1::pairable() const
{
    // get the value of property Pairable
    return qvariant_cast< bool >(parent()->property("Pairable"));
}

void OrgBluezAdapter1::setPairable(bool value)
{
    // set the value of property Pairable
    parent()->setProperty("Pairable", QVariant::fromValue(value));
}

uint OrgBluezAdapter1::pairableTimeout() const
{
    // get the value of property PairableTimeout
    return qvariant_cast< uint >(parent()->property("PairableTimeout"));
}

void OrgBluezAdapter1::setPairableTimeout(uint value)
{
    // set the value of property PairableTimeout
    parent()->setProperty("PairableTimeout", QVariant::fromValue(value));
}

bool OrgBluezAdapter1::powered() const
{
    // get the value of property Powered
    return qvariant_cast< bool >(parent()->property("Powered"));
}

void OrgBluezAdapter1::setPowered(bool value)
{
    // set the value of property Powered
    parent()->setProperty("Powered", QVariant::fromValue(value));
}

QStringList OrgBluezAdapter1::uUIDs() const
{
    // get the value of property UUIDs
    return qvariant_cast< QStringList >(parent()->property("UUIDs"));
}

void OrgBluezAdapter1::RemoveDevice(const QDBusObjectPath &device)
{
    // handle method call org.bluez.Adapter1.RemoveDevice
    QMetaObject::invokeMethod(parent(), "RemoveDevice", Q_ARG(QDBusObjectPath, device));
}

void OrgBluezAdapter1::SetDiscoveryFilter(PropertyMap properties)
{
    // handle method call org.bluez.Adapter1.SetDiscoveryFilter
    QMetaObject::invokeMethod(parent(), "SetDiscoveryFilter", Q_ARG(PropertyMap, properties));
}

void OrgBluezAdapter1::StartDiscovery()
{
    // handle method call org.bluez.Adapter1.StartDiscovery
    QMetaObject::invokeMethod(parent(), "StartDiscovery");
}

void OrgBluezAdapter1::StopDiscovery()
{
    // handle method call org.bluez.Adapter1.StopDiscovery
    QMetaObject::invokeMethod(parent(), "StopDiscovery");
}

